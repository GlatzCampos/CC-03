package dao;

import java.sql.*;
import java.util.ArrayList;
import java.util.List;

import model.Usuario;

public class UsuarioDAO extends DAO {
	public boolean inserirUsuario(Usuario usuario){
        boolean status = false;
        try {
            Statement st = conexao.createStatement();
            String sql = "INSERT INTO usuario (id, nome, email, senha) "
                           + "VALUES ("+usuario.getId()+ ", '" + usuario.getNome() + "' + '"  
                           + usuario.getEmail() + "', '" + usuario.getSenha() + "');";
            System.out.println(sql);
            st.executeUpdate(sql);
            st.close();
            status = true;
        } catch (SQLException e) {
            throw new RuntimeException(e);
        }
        return status;
    }

   public boolean atualizarUsuario(Usuario usuario){
       boolean status = false;
       try {
           Statement st = conexao.createStatement();
           String sql = "UPDATE usuario SET nome = '" + usuario.getNome() + "', email = '"  
                      + usuario.getEmail() + "', senha = '" + usuario.getSenha() + "'"
                      + " WHERE id = " + usuario.getId();
           st.executeUpdate(sql);
           st.close();
           status = true;
       } catch (SQLException e) {
           throw new RuntimeException(e);
       }
       return status;
   }

   public boolean excluirUsuario(int id){
       boolean status = false;
       try {
           Statement st = conexao.createStatement();
           st.executeUpdate("DELETE FROM usuario WHERE id = " + id);
           st.close();
           status = true;
       } catch (SQLException e) {
           throw new RuntimeException(e);
       }
       return status;
   }

   public Usuario[] getUsuarios(){
       Usuario[] usuarios = null;

       try{
           Statement st = conexao.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
           ResultSet rs = st.executeQuery("SELECT * FROM usuario");
           if(rs.next()){
               rs.last();
               usuarios = new Usuario[rs.getRow()];
               rs.beforeFirst();
               for(int i = 0; rs.next(); i++){
                   usuarios[i] = new Usuario(rs.getInt("id"), rs.getString("nome"), rs.getString("email"), rs.getString("senha"));
               }
           }
           st.close();
       } catch (Exception e) {
           System.err.println(e.getMessage());
       }
       return usuarios;
   }

   public Usuario[] getUsuariosNome(String nome){
       Usuario[] usuarios = null;

       try{
           Statement st = conexao.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
           ResultSet rs = st.executeQuery("SELECT * FROM usuario WHERE nome LIKE '" + nome + "%'");
           if(rs.next()){
               rs.last();
               usuarios = new Usuario[rs.getRow()];
               rs.beforeFirst();
               for(int i = 0; rs.next(); i++){
                   usuarios[i] = new Usuario(rs.getInt("id"), rs.getString("nome"), rs.getString("email"), rs.getString("senha"));
               }
           }
           st.close();
       } catch (Exception e) {
           System.err.println(e.getMessage());
       }
       return usuarios;
   }
}
